// <auto-generated />
using System;
using Better.DAL.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Better.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240812141944_SeedCompleted")]
    partial class SeedCompleted
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Better.Entity.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("daa90872-2b2e-474c-a464-4b0009dfbe0b"),
                            CreatedDate = new DateTime(2024, 8, 12, 17, 19, 43, 306, DateTimeKind.Local).AddTicks(3356),
                            Name = "İçecek"
                        },
                        new
                        {
                            Id = new Guid("786214dc-4b54-4438-a673-412a43f62331"),
                            CreatedDate = new DateTime(2024, 8, 12, 17, 19, 43, 306, DateTimeKind.Local).AddTicks(3360),
                            Name = "Atıştırmalık"
                        });
                });

            modelBuilder.Entity("Better.Entity.Entities.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c600ef28-de70-45d8-8689-2ace26134f37"),
                            CreatedDate = new DateTime(2024, 8, 12, 17, 19, 43, 306, DateTimeKind.Local).AddTicks(5440),
                            FileName = "images/testimage",
                            FileType = "jpg"
                        },
                        new
                        {
                            Id = new Guid("35bdb1a3-c402-4a7e-910c-5b7b2e79e486"),
                            CreatedDate = new DateTime(2024, 8, 12, 17, 19, 43, 306, DateTimeKind.Local).AddTicks(5442),
                            FileName = "images/testimage2",
                            FileType = "jpg"
                        });
                });

            modelBuilder.Entity("Better.Entity.Entities.Recipe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Materials")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Preparation")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cc8a0add-1bae-49aa-9ae7-f4d5b162a93f"),
                            CategoryId = new Guid("daa90872-2b2e-474c-a464-4b0009dfbe0b"),
                            CreatedDate = new DateTime(2024, 8, 12, 17, 19, 43, 306, DateTimeKind.Local).AddTicks(7655),
                            ImageId = new Guid("c600ef28-de70-45d8-8689-2ace26134f37"),
                            Materials = "\r\n1 salatalık\r\n1/2 (yarım) yeşil elma\r\n1/4 (çeyrek) bağ kadar maydanoz\r\n1 dal nane\r\n1 bardak su",
                            Preparation = "Bütün malzemeleri blender ya da shaker'dan geçirin. Afiyet Olsun :)",
                            Title = "Ödem Attırıcı Smoothie"
                        },
                        new
                        {
                            Id = new Guid("353fc1a7-be3e-4780-8099-6082cd3e6f43"),
                            CategoryId = new Guid("786214dc-4b54-4438-a673-412a43f62331"),
                            CreatedDate = new DateTime(2024, 8, 12, 17, 19, 43, 306, DateTimeKind.Local).AddTicks(7688),
                            ImageId = new Guid("35bdb1a3-c402-4a7e-910c-5b7b2e79e486"),
                            Materials = "\r\n1 su bardağı yulaf ezmesi\r\n\r\n2 yemek kaşığı bal\r\n\r\n1 yemek kaşığı chia tohumu\r\n\r\n2 yemek kaşığı keten tohumu\r\n\r\n1 çay kaşığı Hindistan cevizi yağı\r\n\r\n1 çay bardağı karışık kuru yemiş\r\n\r\n2 yemek kaşığı fıstık ezmesi\r\n\r\n1 tatlı kaşığı tarçın",
                            Preparation = "İlk olarak geniş bir kap almalısın. Ardından tüm malzemeleri sırayla bu kabın içine dök.\r\n\r\nMalzemeleri homojen bir kıvam alıncaya kadar karıştır.\r\n\r\nTüm malzemeler bir homojen bir kıvama geldikten sonra bir tepsiye yağlı kağıt ser ve hazırlamış olduğun karışımı bu kağıdın üstüne yay.\r\n\r\nKarışım tepsi içerisinde dümdüz bir hal almasını sağla ve karışımı ortalama 20 dk. kadar buzdolabında beklet.\r\n\r\n20 dk. sonunda hazırlamış olduğun barını dilediğin boyutlarda parçalara ayıracak şekilde keserek tüketebilirsin.\r\n",
                            Title = "Protein Yüksek Atıştırmalık"
                        });
                });

            modelBuilder.Entity("Better.Entity.Entities.Recipe", b =>
                {
                    b.HasOne("Better.Entity.Entities.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Better.Entity.Entities.Image", "Image")
                        .WithMany("Recipes")
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Image");
                });

            modelBuilder.Entity("Better.Entity.Entities.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Better.Entity.Entities.Image", b =>
                {
                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
